{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\restcountry\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Countries from \"./components/Countries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = \"https://restcountries.com/v3.1/all\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [countries, setCountries] = useState([]);\n  const fetchData = async url => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setCountries(data);\n      setIsLoading(false);\n      setError(null);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error);\n    }\n  };\n  useEffect(() => {\n    fetchData(url);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Country App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this), countries && /*#__PURE__*/_jsxDEV(Countries, {\n      countries: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"e+VA4hqJEYws4a+ZQzQhwIRZ4Cg=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Countries","url","App","isLoading","setIsLoading","error","setError","countries","setCountries","fetchData","response","fetch","data","json","message"],"sources":["E:/projects/restcountry/src/App.js"],"sourcesContent":["\nimport React,{useState,useEffect}from \"react\";\nimport Countries from \"./components/Countries\";\n\n\n\n\nconst url =\"https://restcountries.com/v3.1/all\";\n\nfunction App (){\n const [isLoading,setIsLoading]=useState(true);\n const [error,setError]=useState(null);\n\n const [countries,setCountries]=useState([]);\n\n const fetchData=async(url)=>{\n  setIsLoading(true);\n  try{\n    const response=await fetch(url);\n    const data=await response.json();\n    setCountries(data);\n    setIsLoading(false);\n    setError(null);\n\n  }\n  catch(error){\n    setIsLoading(false);\n    setError(error);\n\n  }\n };\n\n useEffect(()=>{\n  \n fetchData(url);\n\n\n },[])\n\n  return( <>\n  <h1>Country App</h1>\n  {isLoading && <h2>Loading..</h2>}\n  {error &&<h2>{error.message}</h2>}\n  {countries && <Countries countries={countries}/>}\n  \n  </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAM,OAAO;AAC7C,OAAOC,SAAS,MAAM,wBAAwB;AAAC;AAAA;AAK/C,MAAMC,GAAG,GAAE,oCAAoC;AAE/C,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACN,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACO,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,IAAI,CAAC;EAErC,MAAM,CAACS,SAAS,EAACC,YAAY,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMW,SAAS,GAAC,MAAMR,GAAG,IAAG;IAC3BG,YAAY,CAAC,IAAI,CAAC;IAClB,IAAG;MACD,MAAMM,QAAQ,GAAC,MAAMC,KAAK,CAACV,GAAG,CAAC;MAC/B,MAAMW,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAChCL,YAAY,CAACI,IAAI,CAAC;MAClBR,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAEhB,CAAC,CACD,OAAMD,KAAK,EAAC;MACVD,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACD,KAAK,CAAC;IAEjB;EACD,CAAC;EAEDN,SAAS,CAAC,MAAI;IAEdU,SAAS,CAACR,GAAG,CAAC;EAGd,CAAC,EAAC,EAAE,CAAC;EAEJ,oBAAQ;IAAA,wBACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,EACnBE,SAAS,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,EAC/BE,KAAK,iBAAG;MAAA,UAAKA,KAAK,CAACS;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,EAChCP,SAAS,iBAAI,QAAC,SAAS;MAAC,SAAS,EAAEA;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBAE7C;AAEL;AAAC,GAtCQL,GAAG;AAAA,KAAHA,GAAG;AAsCX;AAED,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}